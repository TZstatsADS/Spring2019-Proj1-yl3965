sliderInput(inputId = "topWordcloud",
label = "Number of terms for word cloud:",
min = 5,
max = 100,
value = 50),
br(),
br(),
checkboxInput(inputId = "topFreqB",
label = "Plot Bar Chart",
value = F),
sliderInput(inputId = "topBarchart",
label = "Number of terms for bar chart:",
min = 1,
max = 25,
value = 10),
br(),
br(),
checkboxInput(inputId = "topFreqN",
label = "Plot Network Graph",
value = F),
sliderInput(inputId = "topNetwork",
label = "Number of edges for network graph:",
min = 1,
max = 150,
value = 50)
),
mainPanel(
wordcloud2Output(outputId = "WC"),
plotOutput(outputId = "figure")
)
)
),
tabPanel("Individual Terms",
titlePanel(h1("Comparison of Proportions",
align = "center")),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "attribute",
label = "Select the attribute:",
choices = c("Gender" = "gender",
"Marital Status" = "marital",
"Parenthood" = "parenthood",
"Reflection Period" = "reflection_period")
)
),
mainPanel(
plotOutput(outputId = "scatter")
)
)
),
tabPanel("Pair of Words",
titlePanel(h1("Most Frequent Bigrams",
align = "center")),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "factor",
label = "Select the attribute:",
choices = c("Gender" = "gender",
"Marital Status" = "marital",
"Parenthood" = "parenthood",
"Reflection Period" = "reflection_period")
),
numericInput(inputId = "topBigrams",
label = "Number of top pairs to view:",
min = 1,
max = 25,
value = 10)
),
mainPanel(
plotOutput(outputId = "bar")
)
)
),
tabPanel("Data",
DT::dataTableOutput("table")
)
)
ui
ui
ui <- navbarPage("What makes people happy?",
tabPanel("Overview",
titlePanel(h1("Most Frequent Occurrences",
align = "center")),
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "topWordcloud",
label = "Number of terms for word cloud:",
min = 5,
max = 100,
value = 50),
br(),
br(),
checkboxInput(inputId = "topFreqB",
label = "Plot Bar Chart",
value = F),
sliderInput(inputId = "topBarchart",
label = "Number of terms for bar chart:",
min = 1,
max = 25,
value = 10),
br(),
br(),
checkboxInput(inputId = "topFreqN",
label = "Plot Network Graph",
value = F),
sliderInput(inputId = "topNetwork",
label = "Number of edges for network graph:",
min = 1,
max = 150,
value = 50)
),
mainPanel(
wordcloud2Output(outputId = "WC"),
plotOutput(outputId = "figure")
)
)
),
tabPanel("Individual Terms",
titlePanel(h1("Comparison of Proportions",
align = "center")),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "attribute",
label = "Select the attribute:",
choices = c("Gender" = "gender",
"Marital Status" = "marital",
"Parenthood" = "parenthood",
"Reflection Period" = "reflection_period")
)
),
mainPanel(
plotOutput(outputId = "scatter")
)
)
),
tabPanel("Pair of Words",
titlePanel(h1("Most Frequent Bigrams",
align = "center")),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "factor",
label = "Select the attribute:",
choices = c("Gender" = "gender",
"Marital Status" = "marital",
"Parenthood" = "parenthood",
"Reflection Period" = "reflection_period")
),
numericInput(inputId = "topBigrams",
label = "Number of top pairs to view:",
min = 1,
max = 25,
value = 10)
),
mainPanel(
plotOutput(outputId = "bar")
)
)
),
tabPanel("Data",
DT::dataTableOutput("table")
)
)
server <- function(input, output, session) {
pt1 <- reactive({
if(!input$topFreqB) return(NULL)
word_count %>%
slice(1:input$topBarchart) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
ylab("Word Frequency")+
coord_flip()
})
pt2 <- reactive({
if(!input$topFreqN) return(NULL)
bigram_graph <- bigram_counts %>%
slice(1:input$topNetwork) %>%
graph_from_data_frame()
set.seed(123)
x <- grid::arrow(type = "closed", length = unit(.1, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = x, end_cap = circle(.05, 'inches')) +
geom_node_point(color = "skyblue", size = 3) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
})
output$WC <- renderWordcloud2({
word_count %>%
slice(1:input$topWordcloud) %>%
wordcloud2(size = 0.6,
rotateRatio = 0)
})
output$figure <- renderPlot(height = 500, width = 500, {
ptlist <- list(pt1(),pt2())
ptlist <- ptlist[!sapply(ptlist, is.null)]
if(length(ptlist)==0) return(NULL)
lay <- rbind(c(1,1),
c(2,2))
grid.arrange(grobs = ptlist, layout_matrix = lay)
})
selectedAttribute <- reactive({
list(atr = input$attribute)
})
output$scatter <- renderPlot({
temp <- bag_of_words %>%
count(!!as.name(selectedAttribute()$atr), word) %>%
group_by(!!as.name(selectedAttribute()$atr)) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(!!as.name(selectedAttribute()$atr), proportion)
ggplot(temp,
aes_string(x = colnames(temp)[2], y = colnames(temp)[3]),
color = abs(colnames(temp)[3] - colnames(temp)[2])) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 1, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme(legend.position="none")
})
selectedBigram <- reactive({
list(var = input$factor)
})
output$bar <- renderPlot({
hm_bigrams %>%
count(!!as.name(selectedBigram()$var), bigram, sort = TRUE) %>%
group_by(!!as.name(selectedBigram()$var)) %>%
top_n(input$topBigrams) %>%
ungroup() %>%
mutate(bigram = reorder(bigram, n)) %>%
ggplot(aes(bigram, n, fill = !!as.name(selectedBigram()$var))) +
geom_col(show.legend = FALSE) +
facet_wrap(as.formula(paste("~", selectedBigram()$var)), ncol = 2, scales = "free") +
coord_flip()
})
output$table <- DT::renderDataTable({
DT::datatable(hm_data)
})
}
shinyApp(ui, server)
paste(hm_data$text,collapse=" ")
wordcloud2(hm_data_one)
hm_data_one <- paste(hm_data$text,collapse=" ")
wordcloud2(hm_data_one)
wordcloud2(hm_data_one[1])
wordcloud2(hm_data_one[,1])
wordcloud2(hm_data_one[1])
wordcloud2(c("1","1","2","2","2","2","3","3"))
hm_text_one <- paste(hm_data$text,collapse=" ")
hm_text_split <- strsplit(hm_text_one, split=" ")[[1]]
head(hm_text_split)
word_count <- table(hm_text_split)
word_count <- sort(word_count, decreasing = TRUE)
head(word_count, 10)
head(word_count, 20)
wordcloud2(word_count)
head(word_count)
wordcloud2(word_count[1:200])
wordcloud2(word_count[1:200],rotationRation=0)
wordcloud2(word_count[1:200],minRotation = 0, maxRotation = 0)
wordcloud2(word_count[1:100],minRotation = 0, maxRotation = 0)
word_count["friend"]
word_count["friends"]
ele<-system.file("examples/female.png",package = "wordcloud2")
wordcloud2(word_count,color='random-light',
backgroundColor='dark',size=5,
minRotation = pi/2,maxRotation =pi/2,
rotateRatio = 0.5,figPath = ele)
ele<-system.file("examples/female.png",package = "wordcloud2")
wordcloud2(word_count,color='random-light',
backgroundColor='dark',size=5,
minRotation = pi/2,maxRotation =pi/2,
rotateRatio = 0.5,figPath = ele)
ele<-system.file("examples/female.jpg",package = "wordcloud2")
wordcloud2(word_count,color='random-light',
backgroundColor='dark',size=5,
minRotation = pi/2,maxRotation =pi/2,
rotateRatio = 0.5,figPath = ele)
ele<-system.file("examples/female.jpg",package = "wordcloud2")
wordcloud2(word_count,color='random-light',size=5,
minRotation = pi/2,maxRotation =pi/2,
rotateRatio = 0.5,figPath = ele)
ele<-system.file("examples/female.jpg",package = "wordcloud2")
wordcloud2(word_count,color='random-light',size=1, figPath = ele)
hm_text_one <- paste(hm_data$text,collapse=" ")
hm_text_split <- strsplit(hm_text_one, split=" ")[[1]]
head(hm_text_split)
word_count <- table(hm_text_split)
word_count <- sort(word_count, decreasing = TRUE)
wordcloud2(word_count[1:100],minRotation = 0, maxRotation = 0)
female<-hm_data[hm_data$gender=="f",]
head(female)
female<-hm_data[hm_data$gender=="f",text]
female<-hm_data[hm_data$gender=="f",]$text
head(female)
female<-hm_data[hm_data$gender=="f",]
female_text_one <- paste(female$text,collapse=" ")
female_text_split <- strsplit(female_text_one, split=" ")[[1]]
female_count <- table(female_text_split)
female_count <- sort(female_count, decreasing = TRUE)
wordcloud2(female_count[1:100],minRotation = 0, maxRotation = 0)
male<-hm_data[hm_data$gender=="m",]
male_text_one <- paste(male$text,collapse=" ")
male_text_split <- strsplit(male_text_one, split=" ")[[1]]
male_count <- table(male_text_split)
male_count <- sort(male_count, decreasing = TRUE)
wordcloud2(male_count[1:100],minRotation = 0, maxRotation = 0)
hm_text_one <- paste(hm_data$text,collapse=" ")
hm_text_split <- strsplit(hm_text_one, split=" ")[[1]]
word_count <- table(hm_text_split)
word_count <- sort(word_count, decreasing = TRUE)
wordcloud2(word_count[1:100],minRotation = 0, maxRotation = 0,shape = 'circle')
wordcloud2(female_count[1:50],minRotation = 0, maxRotation = 0)
male<-hm_data[hm_data$gender=="m",]
male_text_one <- paste(male$text,collapse=" ")
male_text_split <- strsplit(male_text_one, split=" ")[[1]]
male_count <- table(male_text_split)
male_count <- sort(male_count, decreasing = TRUE)
wordcloud2(male_count[1:50],minRotation = 0, maxRotation = 0)
wordcloud2(male_count[1:50],minRotation = 0, maxRotation = 0)
a=1
b<-c(1,2,3,4)
a in b
b<-c(1,2,3,4,5,6)
head(female_count)
head(female_count,50)
female_count
trash_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/trash-dict.txt")
trash_dict
as.vector(trash_dict)
trash_dict[1]
trash_dict[1,]
paste(trash_dict,collapse=" ")
trash_dict <- read.csv("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/trash-dict.csv")
setwd('C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data')
trash_dict <- read_csv("../data/trash.csv")
trash_dict <- read_csv("../data/trash-dict.csv")
setwd('C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data')
trash_dict <- read_csv("../data/trash-dict.csv")
trash_dict <- read_csv("../data/trash-dict.csv")
setwd('C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data')
trash_dict <- read_csv("../data/trash-dict.csv")
setwd('C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data')
trash_dict <- read_csv("../data/trash-dict")
setwd('C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data')
trash_dict <- read_csv("../data/trash-dict")
setwd('C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data')
trash_dict <- read_csv("../trash-dict.csv")
trash_dict <- read_csv("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/trash-dict.csv")
trash_dict <- read_csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv")
trash_dict <- read.csv("C:/trash-dict.csv",sep = " ")
trash_dict <- read_csv("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/trash-dict.csv")
trash_dict <- read.csv("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/trash-dict.csv")
read.csv("C:/trash-dict.csv")
trash_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/trash-dict.txt")
trash_dict
paste(trash_dict$V1,collapse=" ")
strsplit(trash_dict, split=" ")[[1]]
trash_dict <- paste(trash_dict$V1,collapse=" ")
strsplit(trash_dict, split=" ")[[1]]
sample <- female_count[1:100]
sample[-trash_dict]
sahea(sample)
head(sample)
sample[-c("day")]
sample[which(sample=="dat")]
sample[which(sample=="day")]
which(sample=="day")
setwd("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965")
read.table("~/data/trash-dict/.txt")
read.table("~/data/trash-dict.txt")
getwd()
setwd("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965")
setwd("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965")
getwd()
enterta_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/entertainment-dict.txt")
enterta_dict <- paste(enterta_dict$V1,collapse=" ")
enterta_dict <- strsplit(enterta_dict, split=" ")[[1]]
enterta_dict
length(grep(enterta_dict,female))
grep(enterta_dict,female)
enterta_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/entertainment-dict.txt")
enterta_dict <- paste(enterta_dict$V1,collapse="|")
grep(enterta_dict,female)
enterta_dict
female[2,]
female[2,]
grep(enterta_dict,female$text)
f_num<-nrow(female)
female_enterta<-length(grep(enterta_dict,female$text))/f_num
female_enterta
exer_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/exercise-dict.txt")
exer_dict <- paste(exer_dict$V1,collapse="|")
exer_dict <- strsplit(exer_dict, split=" ")[[1]]
female_exer<-length(grep(exer_dict,female$text))/f_num
female_exer
people_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/people-dict.txt")
people_dict <- paste(people_dict$V1,collapse="|")
people_dict <- strsplit(people_dict, split=" ")[[1]]
people_exer<-grep(people_dict,female$text)
food_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/food-dict.txt")
food_dict <- paste(food_dict$V1,collapse="|")
food_dict <- strsplit(food_dict, split=" ")[[1]]
food_exer<-grep(food_dict,female$text)
#female;shopping
shop_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/shopping-dict.txt")
shop_dict <- paste(shop_dict$V1,collapse="|")
shop_dict <- strsplit(shop_dict, split=" ")[[1]]
shop_exer<-grep(shop_dict,female$text)
#female;entertainment
enterta_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/entertainment-dict.txt")
enterta_dict <- paste(enterta_dict$V1,collapse="|")
enterta_dict <- strsplit(enterta_dict, split=" ")[[1]]
female_enterta<-grep(enterta_dict,female$text)#number of female;entertainment in female$text
#female;exercise
exer_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/exercise-dict.txt")
exer_dict <- paste(exer_dict$V1,collapse="|")
exer_dict <- strsplit(exer_dict, split=" ")[[1]]
female_exer<-grep(exer_dict,female$text)
#female;people
people_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/people-dict.txt")
people_dict <- paste(people_dict$V1,collapse="|")
people_dict <- strsplit(people_dict, split=" ")[[1]]
female_people<-grep(people_dict,female$text)
#female;food
food_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/food-dict.txt")
food_dict <- paste(food_dict$V1,collapse="|")
food_dict <- strsplit(food_dict, split=" ")[[1]]
female_food<-grep(food_dict,female$text)
#female;shopping
shop_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/shopping-dict.txt")
shop_dict <- paste(shop_dict$V1,collapse="|")
shop_dict <- strsplit(shop_dict, split=" ")[[1]]
female_shop<-grep(shop_dict,female$text)
#female;shopping
shop_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/shopping-dict.txt")
shop_dict <- paste(shop_dict$V1,collapse="|")
shop_dict <- strsplit(shop_dict, split=" ")[[1]]
female_shop<-grep(shop_dict,female$text)
#female;work
work_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/work-dict.txt")
work_dict <- read.table("C:/Users/Administrator/Documents/GitHub/Spring2019-Proj1-yl3965/data/work-dict.txt")
work_dict <- paste(work_dict$V1,collapse="|")
work_dict <- strsplit(work_dict, split=" ")[[1]]
female_work<-grep(work_dict,female$text)
female_work
length(female_enterta)+length(female_exer)
topic<-c("entertainment", "exercise", "people", "food", "shopping", "work")
topic_levels <- levels(factor(topic))
female_tot<-length(female_enterta)+length(female_exer)+length(female_people)+length(female_food)+length(female_shop)+length(female_work)
topic_levels
female_prop[,1]=topic_levels
female_prop <- as.data.frame(matrix(rep(0,12)),ncol=2)
female_prop[,1]=topic_levels
female_pro
female_prop
female_prop <- as.data.frame(matrix(rep(0,12)),ncol=2)
female_prop
female_prop <- as.data.frame(matrix(rep(0,12)),ncol=2)
female_prop
female_prop <- as.data.frame(matrix(rep(0,12),ncol=2))
female_prop
female_prop[,1]=topic_levels
female_prop
female_prop[1,2]=length(female_enterta)/female_tot
female_prop
female_prop[,1]=topic_levels
female_prop[1,2]=length(female_enterta)/female_tot
female_prop[2,2]=length(female_exer)/female_tot
female_prop[3,2]=length(female_people)/female_tot
female_prop[4,2]=length(female_food)/female_tot
female_prop[5,2]=length(female_shop)/female_tot
female_prop[6,2]=length(female_work)/female_tot
female_prop
colnames(female_prop)<-c("topic","prop")
female_prop$topic = factor(female_prop$topic, levels=female_prop[order(female_prop$prop),1])
ggplot(female_prop, aes(x=topic,y=prop)) + labs(x = "topic", y = "prop")+ geom_bar(stat = "identity")+coord_flip()
male_enterta<-grep(enterta_dict,male$text)#number of male;entertainment in female$text
male_exer<-grep(exer_dict,male$text)
male_people<-grep(people_dict,male$text)
male_food<-grep(food_dict,male$text)
male_shop<-grep(shop_dict,male$text)
male_work<-grep(work_dict,male$text)
male_enterta<-grep(enterta_dict,male$text)#number of male;entertainment in female$text
male_exer<-grep(exer_dict,male$text)
male_people<-grep(people_dict,male$text)
male_food<-grep(food_dict,male$text)
male_shop<-grep(shop_dict,male$text)
male_work<-grep(work_dict,male$text)
male_tot<-length(male_enterta)+length(male_exer)+length(male_people)+length(male_food)+length(male_shop)+length(male_work)
male_prop <- as.data.frame(matrix(rep(0,12),ncol=2))
male_prop[,1]=topic_levels
male_prop[1,2]=length(male_enterta)/male_tot
male_prop[2,2]=length(male_exer)/male_tot
male_prop[3,2]=length(male_people)/male_tot
male_prop[4,2]=length(male_food)/male_tot
male_prop[5,2]=length(male_shop)/male_tot
male_prop[6,2]=length(male_work)/male_tot
colnames(male_prop)<-c("topic","prop")
male_prop$topic = factor(male_prop$topic, levels=male_prop[order(male_prop$prop),1])
ggplot(male_prop, aes(x=topic,y=prop)) + labs(x = "topic", y = "prop")+ geom_bar(stat = "identity")+coord_flip()
male_prop
female_prop
